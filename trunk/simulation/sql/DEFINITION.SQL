drop table if exists WORLDS;
create table WORLDS (
    ID INTEGER CONSTRAINT WORLDS_PK PRIMARY KEY ASC AUTOINCREMENT NOT NULL,
    JSON_DEF TEXT
);

drop table if exists worlds_runs;
create table worlds_runs (
    ID INTEGER CONSTRAINT WORLDS_RUNS_PK PRIMARY KEY ASC AUTOINCREMENT NOT NULL,
    WORLD_ID INTEGER CONSTRAINT WORLDS_FK REFERENCES WORLDS (ID) ON DELETE CASCADE,
    DATE_START DATE_TEXT,
    DATE_STOP DATE_TEXT,
    STOP_CASE TEXT
);

drop table  if exists WORLDS_SNAPSHOTS;
   create table WORLDS_SNAPSHOTS (
       ID INTEGER CONSTRAINT WORLDS_SNAPSHOTS_PK PRIMARY KEY ASC AUTOINCREMENT NOT NULL,
       WORLD_RUN_ID INTEGER CONSTRAINT WORLDS_RUNS_FK REFERENCES WORLDS_RUNS (ID) ON DELETE CASCADE,
       SNAPSHOT_TIME DATE_TEXT
 );
  
 drop table  if exists  FIELDS_SNAPSHOTS;
CREATE TABLE FIELDS_SNAPSHOTS (
    ID INTEGER CONSTRAINT FIELDS_SNAPSHOTS_PK PRIMARY KEY ASC AUTOINCREMENT NOT NULL,
    WORLD_SNAPSHOT_ID INTEGER CONSTRAINT WORLDS_SNAPSHOTS_FK REFERENCES WORLDS_SNAPSHOTS (ID) ON DELETE CASCADE,
    LAG REAL NOT NULL
);

drop table  if exists PRODUCTS;
   create table PRODUCTS (
       ID INTEGER CONSTRAINT PRODUCTS_PK PRIMARY KEY ASC AUTOINCREMENT NOT NULL,
      WORLD_ID INTEGER CONSTRAINT WORLDS_FK REFERENCES WORLDS (ID) ON DELETE CASCADE,      
       NAME TEXT
 );

drop table  if exists  RESOURCES;
   create table RESOURCES (
       ID INTEGER CONSTRAINT RESOURCES_PK PRIMARY KEY ASC AUTOINCREMENT NOT NULL,
       WORLD_ID INTEGER CONSTRAINT WORLDS_FK REFERENCES WORLDS (ID) ON DELETE CASCADE,      
       NAME TEXT
 );
   
  drop table  if exists  POPULATIONS_SNAPSHOTS;
  create table POPULATIONS_SNAPSHOTS (
       ID INTEGER CONSTRAINT POPULATIONS_SNAPSHOTS_PK PRIMARY KEY ASC AUTOINCREMENT NOT NULL,
       FIELD_SNAPSHOT_ID INTEGER CONSTRAINT FIELDS_SNAPSHOTS_FK REFERENCES FIELDS_SNAPSHOTS(ID) ON DELETE CASCADE,
       SPECIES TEXT
 );
 
 drop table  if exists CREATURES_SNAPSHOTS;
   create table CREATURES_SNAPSHOTS (
       ID INTEGER CONSTRAINT CREATURES_SNAPSHOTS_PK PRIMARY KEY ASC AUTOINCREMENT NOT NULL,
       POPULATION_SNAPSHOT_ID INTEGER CONSTRAINT POPULATIONS_SNAPSHOTS_FK REFERENCES POPULATIONS_SNAPSHOTS(ID) ON DELETE CASCADE,
       AGE INTEGER,
       OBJECTIVE_VALUE REAL,
       GENOME TEXT
 );
 
 drop table  if exists CREATURES_PRODUCTS_SNAPSHOTS;
 create table CREATURES_PRODUCTS_SNAPSHOTS (
       CREATURE_SNAPSHOT_ID INTEGER CONSTRAINT CREATURES_SNAPSHOTS_FK REFERENCES CREATURES_SNAPSHOTS(ID) ON DELETE CASCADE,
       PRODUCED REAL,
       NEEDS REAL
 );
 drop table  if exists CREATURES_RESOURCES_SNAPSHOTS;
 create table CREATURES_RESOURCES_SNAPSHOTS (
       CREATURE_SNAPSHOT_ID INTEGER CONSTRAINT CREATURES_SNAPSHOTS_FK REFERENCES CREATURES_SNAPSHOTS(ID) ON DELETE CASCADE,
       USED REAL
  );
  
  drop table  if exists FIELDS_PRODUCTS_SNAPSHOTS;
   create table FIELDS_PRODUCTS_SNAPSHOTS (
       FIELD_SNAPSHOT_ID INTEGER CONSTRAINT FIELDS_SNAPSHOTS_FK REFERENCES FIELDS_SNAPSHOTS(ID) ON DELETE CASCADE,
       PRICE REAL,
       QUANT REAL
 );
 
 drop table  if exists RESOURCES_RESOURCES_SNAPSHOTS;
 create table RESOURCES_RESOURCES_SNAPSHOTS (
       RESOURCE_SNAPSHOT_ID INTEGER CONSTRAINT RESOURCES_SNAPSHOTS_FK REFERENCES RESOURCES_SNAPSHOTS(ID) ON DELETE CASCADE,
       PRICE REAL,
       AMOUNT REAL
  );